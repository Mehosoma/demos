var AuthModalLogin = function (type, registerUrl, redirectUrl, idLesson) {
    var self = this;
    this.type = type;
    this.registerUrl = registerUrl;
    this.redirectUrl = redirectUrl;
    this.idLesson = idLesson;

    this.redirectUrl = this.redirectUrl.replace("#", "");
    $('#modal-window-login').show();
    $('#modal-window-login').on('click', function (e) {
        var target = e.target;
        if ($(target).attr('id') === 'modal-window-login') {
            $('#modal-window-login').hide();
        }
    });
    $('#modal-window-login #toRegistration').on('click', function (e) {
        $('#modal-window-login ').hide();
        var authModalRegistration = new AuthModalRegistration(self.type, self.registerUrl, self.redirectUrl, self.idLesson);
        authModalRegistration.validation();
        authModalRegistration.registration(function () {
        });
        $('#modal-window-registration').show();

    });

    $('#modal-window-login .closeModal').on('click', function (e) {
        $(this).closest('#modal-window-login').hide();
    });
};
AuthModalLogin.prototype.loginButton = function (callback) {
    var self = this;
    $(document).on('click', '#modalBtnLogin', function () {
        var userdata = {
            user_login: $("#modal-window-login #username").val(),
            password: $("#modal-window-login #password").val()
        };
        $.ajax({
            url: '/user/login/loginajax',
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify(userdata),
            success: function (data) {
                var status = data.status;
                if (status === 200) {
                    var lessonId;
                    switch (self.type) {
                        case 0:

                            self.redirect();
                            break;
                        case 1:
                            lessonId = self.idLesson;
                            // регистрация на вебинар
                            $.ajax({
                                url: self.registerUrl,
                                type: 'POST',
                                dataType: 'json',
                                data: {
                                    id: lessonId
                                },
                                success: function (data) {

                                    self.redirect();
                                },
                                error: function (response) {

                                }
                            });

                            break;
                        case 2:
                            lessonId = self.idLesson;
                            // регистрация на вебинар
                            $.ajax({
                                url: self.registerUrl,
                                type: 'POST',
                                dataType: 'json',
                                data: {
                                    id: lessonId
                                },
                                success: function (data) {
                                    console.log('register ,', data);
                                    $('#modal-window-login').hide();
                                    callback();
                                },
                                error: function (response) {
                                    console.log('error register vebinar ', response);
                                }
                            });

                            break;
                    }
                } else if (status === 404) {
                    var errorType = data['type-error'];
                    if (errorType === 3) {
                        errorType = 1;
                    }
                    var needsFormGroup, errorLabel;
                    switch (errorType) {
                        case 0:
                            $('#modal-window-login').hide();
                            self.redirect(self.redirect);
                            break;
                        case 1:
                            errorLabel = $("#modal-window-login .errLogin");
                            needsFormGroup = $(errorLabel).closest('.form-group');
                            $(errorLabel).text('Логин не верен');
                            $(errorLabel).show();
                            $(needsFormGroup).addClass('has-error');
                            $(needsFormGroup).removeClass('has-success');
                            break;
                        case 2:
                            errorLabel = $("#modal-window-login .errPassword");
                            needsFormGroup = $(errorLabel).closest('.form-group');
                            $(errorLabel).text('Пароль не верен');
                            $(errorLabel).show();
                            $(needsFormGroup).addClass('has-error');
                            $(needsFormGroup).removeClass('has-success');
                            break;
                    }
                }

                switch (self.type) {
                    case 0:

                        break;
                    case 1:

                        break;
                    case 2:

                        break;
                }
            },
            error: function (response) {
            }
        });
    });
};
AuthModalLogin.prototype.redirect = function () {
    window.location.href = this.redirectUrl;
};
AuthModalLogin.prototype.validationForm = function () {
    $(document).on('focusout input', '#modal-window-login input', function (e) {
        var target = e.target;
        var currentInput = $(target);
        if (!$(currentInput).val()) {
            $(currentInput).parents('.form-group').addClass('has-error');
            $(currentInput).parents('.form-group').removeClass('has-success');
            $(currentInput).parents('.form-group').find('.hint').text('Поле не заполнено');
            $(currentInput).parents('.form-group').find('.hint').show();
        } else {
            $(currentInput).parents('.form-group').removeClass('has-error');
            $(currentInput).parents('.form-group').addClass('has-success');
            $(currentInput).parents('.form-group').find('.hint').hide();
        }
    });
};


var AuthModalRegistration = function (type, registerUrl, redirectUrl, idLesson) {
    this.type = type;
    this.registerUrl = registerUrl;
    this.redirectUrl = redirectUrl;
    this.idLesson = idLesson;

    $('#modal-window-registration').show();
    $('#modal-window-registration').on('click', function (e) {
        var target = e.target;
        if ($(target).attr('id') === 'modal-window-registration') {
            $('#modal-window-registration').hide();
        }
    });

    $('#modal-window-registration .closeModal').on('click', function (e) {
        $('#modal-window-registration').hide();
    });
};
AuthModalRegistration.prototype.registration = function (callback) {
    var self = this;
    $(document).on('click', '#modalBtnRegistration', function () {
        $('#modal-window-registration #errorRegistration small').hide();
        var name = $('#modal-window-registration #name').val();
        var email = $('#modal-window-registration #email').val();
        var tel = $('#modal-window-registration #tel').val();
        var password = $('#modal-window-registration #registration-password').val();
        $.ajax({
            url: '/user/login/newclientajax',
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify({
                user_reistration: {
                    fio: name,
                    email: email,
                    password: password,
                    phone: tel,
                },
                refferrer: window.location.href
            }),
            success: function (data) {
                switch (data.status) {
                    case 200:
                        var lessonId;
                        switch (self.type) {
                            case 0:
                                self.redirect();
                                break;
                            case 1:
                                lessonId = self.idLesson;
                                // регистрация на вебинар
                                $.ajax({
                                    url: self.registerUrl,
                                    type: 'POST',
                                    dataType: 'json',
                                    data: {
                                        id: lessonId
                                    },
                                    success: function (data) {
                                        $('.modal-window-registration').hide();
                                    },
                                    error: function (response) {
                                    }
                                });
                                break;
                            case 2:
                                lessonId = self.idLesson;
                                // регистрация на вебинар
                                $.ajax({
                                    url: self.registerUrl,
                                    type: 'POST',
                                    dataType: 'json',
                                    data: {
                                        id: lessonId
                                    },
                                    success: function (data) {
                                        self.redirect();
                                    },
                                    error: function (response) {
                                    }
                                });

                                break;
                        }
                        self.redirect();
                        break;

                    case 500:
                        $('#modal-window-registration #errorRegistration small').show();
                        break;
                }
            },
            error: function (response) {
                console.log('error registration ', response);
            }
        });
    });
};
AuthModalRegistration.prototype.validation = function () {
    $("#tel").mask("89999999999");
    $(document).on('focusout input', '#registrationForm input', function (e) {
        var target = e.target;
        var currentInput = $(target);
        if (!$(currentInput).val()) {
            $(currentInput).parents('.form-group').addClass('has-error');
            $(currentInput).parents('.form-group').removeClass('has-success');
            $(currentInput).parents('.form-group').find('.hint').text('Поле не заполнено');
            $(currentInput).parents('.form-group').find('.hint').show();
        } else {
            $(currentInput).parents('.form-group').removeClass('has-error');
            $(currentInput).parents('.form-group').addClass('has-success');
            $(currentInput).parents('.form-group').find('.hint').hide();
        }
    });
};
AuthModalRegistration.prototype.redirect = function () {
    window.location.href = this.redirectUrl;
};